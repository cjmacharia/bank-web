{
  "stats": {
    "suites": 8,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2023-02-12T15:01:57.601Z",
    "end": "2023-02-12T15:02:12.769Z",
    "duration": 15168,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "dfee5aeb-5724-4863-923b-56ca18bd2df1",
      "title": "",
      "fullFile": "cypress/e2e/allSpec.cy.js",
      "file": "cypress/e2e/allSpec.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "eab7fd5b-8775-4bd5-8c56-5c71d2ff23f0",
          "title": "Login test cases",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should login successfully as a manager",
              "fullTitle": "Login test cases should login successfully as a manager",
              "timedOut": null,
              "duration": 5468,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_loginPage.default.clickMangerButton();\n_managerPage.default.elements.addCustomerButton().should('be.visible');\n_managerPage.default.elements.openAccountButton().should('be.visible');\n_managerPage.default.elements.customersButton().should('be.visible');",
              "err": {},
              "uuid": "1aaeb690-cb8d-4fcb-980b-5c00c45c931b",
              "parentUUID": "eab7fd5b-8775-4bd5-8c56-5c71d2ff23f0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1aaeb690-cb8d-4fcb-980b-5c00c45c931b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5468,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a9ec5845-65f5-49e6-ac70-d9547115dfa8",
          "title": "add customers",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should successfully add a customer",
              "fullTitle": "add customers should successfully add a customer",
              "timedOut": null,
              "duration": 1780,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_loginPage.default.clickMangerButton();\n_managerPage.default.elements.addCustomerButton().should('be.visible');\n_managerPage.default.clickAddCustomerButton();\n_addCustomersPage.default.elements.lastName().should('be.visible');\n_addCustomersPage.default.elements.firstName().should('be.visible');\n_addCustomersPage.default.elements.postCode().should('be.visible');\ncy.url().should('include', '/manager/addCust');\ncy.fixture('testData.json').then(user => {\n  _addCustomersPage.default.typeFirstName(user.firstName);\n  _addCustomersPage.default.typeLastName(user.lastName);\n  _addCustomersPage.default.typePostCode(user.postCode);\n});\ncy.on('window:alert', message => {\n  cy.wrap(new Promise((resolve, reject) => {\n    if (!message.includes('Customer added successfully with customer id')) {\n      reject(`Expected alert message to contain \"Customer added successfully with customer id:\", but got \"${message}\"`);\n    } else {\n      resolve();\n    }\n  })).catch(error => {\n    cy.fail(error);\n  });\n});\n_addCustomersPage.default.clickAddCustomer();",
              "err": {},
              "uuid": "85602bda-e122-428e-a478-2c6c192c59c8",
              "parentUUID": "a9ec5845-65f5-49e6-ac70-d9547115dfa8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fail to add a duplicate user",
              "fullTitle": "add customers should fail to add a duplicate user",
              "timedOut": null,
              "duration": 1461,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_managerPage.default.clickAddCustomerButton();\n_addCustomersPage.default.elements.lastName().should('be.visible');\n_addCustomersPage.default.elements.firstName().should('be.visible');\n_addCustomersPage.default.elements.postCode().should('be.visible');\ncy.url().should('include', '/manager/addCust');\ncy.fixture('testData.json').then(data => {\n  _addCustomersPage.default.typeFirstName(data.firstName);\n  _addCustomersPage.default.typeLastName(data.lastName);\n  _addCustomersPage.default.typePostCode(data.postCode);\n});\ncy.on('window:alert', message => {\n  cy.wrap(new Promise((resolve, reject) => {\n    if (!message.includes('Please check the details. Customer may be duplicate')) {\n      reject(`Expected alert message to contain \"Please check the details. Customer may be duplicate:\", but got \"${message}\"`);\n    } else {\n      resolve();\n    }\n  })).catch(error => {\n    cy.fail(error);\n  });\n});\n_addCustomersPage.default.clickAddCustomer();",
              "err": {},
              "uuid": "0f4527a1-5775-4954-a09b-f065cbc015f6",
              "parentUUID": "a9ec5845-65f5-49e6-ac70-d9547115dfa8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "85602bda-e122-428e-a478-2c6c192c59c8",
            "0f4527a1-5775-4954-a09b-f065cbc015f6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3241,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "dfe5eea5-6d7f-41b0-b4e6-e957f1e45e2c",
          "title": "Open customers accounts",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should successfully create a customer account",
              "fullTitle": "Open customers accounts should successfully create a customer account",
              "timedOut": null,
              "duration": 1187,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_loginPage.default.clickMangerButton();\n_managerPage.default.elements.openAccountButton().should('be.visible');\n_managerPage.default.clickOpenAccountButton();\ncy.fixture('testData.json').then(data => {\n  _openAccountPage.default.selectCustomer(`${data.firstName} ${data.lastName}`);\n});\n_openAccountPage.default.selectCurrency('Pound');\nlet alertContent;\ncy.on('window:alert', message => {\n  cy.wrap(new Promise((resolve, reject) => {\n    if (!message.includes('Account created successfully with account Number')) {\n      reject(`Expected alert message to contain \"Account created successfully with account Number:\", but got \"${message}\"`);\n    } else {\n      alertContent = message;\n      resolve();\n    }\n  })).catch(error => {\n    cy.fail(error);\n  });\n});\n_openAccountPage.default.clickProcessButton();\n// update test data with customer id \ncy.fixture('testData.json').then(data => {\n  data.account_number = alertContent;\n  cy.writeFile('cypress/fixtures/testData.json', data);\n});",
              "err": {},
              "uuid": "e3c02d78-59f9-4de0-b82b-b96b545a91a5",
              "parentUUID": "dfe5eea5-6d7f-41b0-b4e6-e957f1e45e2c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e3c02d78-59f9-4de0-b82b-b96b545a91a5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1187,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b1b3659d-d9ae-405f-b018-257bf78de2a4",
          "title": "Login test cases",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should login successfully as a customer",
              "fullTitle": "Login test cases should login successfully as a customer",
              "timedOut": null,
              "duration": 1430,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_loginPage.default.clickCustomerButton();\n_selectCustomerPage.default.elements.selectUser().should('be.visible');\n_selectCustomerPage.default.elements.loginButton().should('not.be.visible');\ncy.fixture('testData.json').then(data => {\n  _selectCustomerPage.default.selectYourName(`${data.firstName} ${data.lastName}`);\n});\n_selectCustomerPage.default.elements.loginButton().should('be.visible');\n_selectCustomerPage.default.clickLoginButton();\ncy.readFile('cypress/fixtures/testData.json').then(data => {\n  const account_number = data.account_number.split(':')[1].trim();\n  _accountsPage.default.elements.accountNumber().should('have.text', account_number);\n});",
              "err": {},
              "uuid": "034d2674-c160-4597-ac25-49fe3054d501",
              "parentUUID": "b1b3659d-d9ae-405f-b018-257bf78de2a4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "034d2674-c160-4597-ac25-49fe3054d501"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1430,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "db5e6175-0f08-438f-881b-43d91ed2e91c",
          "title": "deposit amount testcases",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should successfully deposit money into my account",
              "fullTitle": "deposit amount testcases should successfully deposit money into my account",
              "timedOut": null,
              "duration": 860,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_accountsPage.default.clickdepositButton();\n_depositPage.default.elements.depositButton().should('have.text', 'Deposit');\n_depositPage.default.elements.amountInput().should('be.visible');\ncy.fixture('testData.json').then(data => {\n  _depositPage.default.enterAnAmount(data.deposit);\n});\n_depositPage.default.depositAmount();\n_depositPage.default.elements.message().should('have.text', 'Deposit Successful');",
              "err": {},
              "uuid": "5c528091-1cdf-4239-a0e1-e47788632e3c",
              "parentUUID": "db5e6175-0f08-438f-881b-43d91ed2e91c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5c528091-1cdf-4239-a0e1-e47788632e3c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 860,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c6912751-6e73-401a-afed-d41aec314ec1",
          "title": "withdraw amount testcases",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should successfully withdraw money from my account",
              "fullTitle": "withdraw amount testcases should successfully withdraw money from my account",
              "timedOut": null,
              "duration": 899,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_withdrawPage.default.elements.withdrawButton().should('have.text', 'Withdraw');\n_withdrawPage.default.elements.amountInput().should('be.visible');\ncy.fixture('testData').then(data => {\n  _withdrawPage.default.enterAnAmount(data.withdraw);\n});\n_withdrawPage.default.withdrawAmount();\n_withdrawPage.default.elements.message().should('have.text', 'Transaction successful');",
              "err": {},
              "uuid": "c9059d72-e088-4c52-b747-4d08d95d0049",
              "parentUUID": "c6912751-6e73-401a-afed-d41aec314ec1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not withdraw more than the deposited amount",
              "fullTitle": "withdraw amount testcases should not withdraw more than the deposited amount",
              "timedOut": null,
              "duration": 404,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('testData.json').then(data => {\n  _withdrawPage.default.enterAnAmount(data.negativeWithdraw);\n});\n_withdrawPage.default.withdrawAmount();\n_withdrawPage.default.elements.message().should('have.text', 'Transaction Failed. You can not withdraw amount more than the balance.');",
              "err": {},
              "uuid": "510fa0b1-1da9-4ed4-98b6-33f56db77b5f",
              "parentUUID": "c6912751-6e73-401a-afed-d41aec314ec1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c9059d72-e088-4c52-b747-4d08d95d0049",
            "510fa0b1-1da9-4ed4-98b6-33f56db77b5f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1303,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3ec1b425-4a41-49b8-906f-a64fbc38bf22",
          "title": "Transactions testcases",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display the transactions made",
              "fullTitle": "Transactions testcases should display the transactions made",
              "timedOut": null,
              "duration": 523,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_accountsPage.default.clicktranscationsButton();\ncy.fixture('testData.json').then(data => {\n  _transactionsPage.default.elements.creditAmount().should('have.text', data.deposit);\n  _transactionsPage.default.elements.debitAmount().should('have.text', data.withdraw);\n});",
              "err": {},
              "uuid": "917c5d6a-7722-417e-b109-ffe090b904ca",
              "parentUUID": "3ec1b425-4a41-49b8-906f-a64fbc38bf22",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "917c5d6a-7722-417e-b109-ffe090b904ca"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 523,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "891920e9-72ed-4e6c-93ca-58764f7fc182",
          "title": "delete customers",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should successfully delete a customer",
              "fullTitle": "delete customers should successfully delete a customer",
              "timedOut": null,
              "duration": 1017,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_loginPage.default.clickHomeButton();\n_loginPage.default.clickMangerButton();\n_managerPage.default.elements.customersButton().should('be.visible');\n_managerPage.default.clickCustomersButton();\ncy.readFile('cypress/fixtures/testData.json').then(data => {\n  const account_number = data.account_number.split(':')[1].trim();\n  _allCustomersPage.default.searchCustomer(account_number);\n});\n//assert one customer is returned\n_allCustomersPage.default.elements.customerName().should('have.length', '1');\n_allCustomersPage.default.deleteCustomer();\n// assert customer was deleted\n_allCustomersPage.default.elements.customerName().should('have.length', '0');",
              "err": {},
              "uuid": "fe6c269c-cfcc-422d-8d48-240b71023d97",
              "parentUUID": "891920e9-72ed-4e6c-93ca-58764f7fc182",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fe6c269c-cfcc-422d-8d48-240b71023d97"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1017,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress/reports/html/.jsons"
      },
      "version": "6.2.0"
    }
  }
}